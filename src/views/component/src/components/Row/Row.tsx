/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import VectorImage from 'src/assets/images/Row_Vector.png';
import Vector1Image from 'src/assets/images/Row_Vector_1.png';
import Vector2Image from 'src/assets/images/Row_Vector_2.png';
import Vector3Image from 'src/assets/images/Row_Vector_3.png';
import Vector4Image from 'src/assets/images/Row_Vector_4.png';
import { styled } from '@mui/material/styles';
import Cell from 'src/components/Cell/Cell';
import Badge1 from 'src/components/Badge1/Badge1';
import { RowProps } from 'src/types';

const RowHeader: any = styled('div')(({ theme }: any) => ({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  border: `1px solid rgba(241, 243, 245, 1)`,
  borderRadius: `24px 24px 0px 0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  width: '100%',
  justifyContent: `space-between`,
  alignItems: `center`,
  padding: `16px 24px`,
  boxSizing: `border-box`,
  height: 'auto',
}));

const Frame28: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Cell1: any = styled(Cell)(({ theme }: any) => ({
  width: `200px`,
  margin: `0px`,
}));

const Cell2: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px 0px 0px 96px`,
}));

const Frame27: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `center`,
  padding: `0px 100px 0px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Cell3: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px`,
}));

const Cell4: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px 0px 0px 96px`,
}));

const Cell5: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px 0px 0px 96px`,
}));

const Frame281: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Cell6: any = styled(Cell)(({ theme }: any) => ({
  width: `200px`,
  margin: `0px`,
}));

const Cell7: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px 0px 0px 96px`,
}));

const Frame271: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 100px 0px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Cell8: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px`,
}));

const Cell9: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px 0px 0px 96px`,
}));

const Frame29: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `80px`,
  margin: `0px 0px 0px 96px`,
});

const Badge2: any = styled(Badge1)(({ theme }: any) => ({
  margin: `0px`,
}));

const Frame282: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Cell10: any = styled(Cell)(({ theme }: any) => ({
  width: `200px`,
  margin: `0px`,
}));

const Cell11: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px 0px 0px 96px`,
}));

const Frame272: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 100px 0px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Cell12: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px`,
}));

const Cell13: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px 0px 0px 96px`,
}));

const Frame291: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `80px`,
  margin: `0px 0px 0px 96px`,
});

const Badge3: any = styled(Badge1)(({ theme }: any) => ({
  margin: `0px`,
}));

const Frame283: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Cell14: any = styled(Cell)(({ theme }: any) => ({
  width: `200px`,
  margin: `0px`,
}));

const Cell15: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px 0px 0px 96px`,
}));

const Group: any = styled('div')({
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `12.76px`,
  height: `16.01px`,
  left: `194px`,
  top: `13px`,
});

const Vector: any = styled('img')({
  height: `16.01px`,
  width: `12.76px`,
  position: `absolute`,
  left: `0px`,
  top: `0px`,
});

const Vector1: any = styled('img')({
  height: `16.01px`,
  width: `12.76px`,
  position: `absolute`,
  left: `0px`,
  top: `0px`,
});

const Vector2: any = styled('img')({
  height: `3.57px`,
  width: `0px`,
  position: `absolute`,
  left: `10px`,
  top: `9px`,
});

const Vector3: any = styled('img')({
  height: `3.57px`,
  width: `0.09px`,
  position: `absolute`,
  left: `8px`,
  top: `9px`,
});

const Vector4: any = styled('img')({
  height: `3.57px`,
  width: `0px`,
  position: `absolute`,
  left: `6px`,
  top: `9px`,
});

const Frame31: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 100px 0px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Frame32: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Frame273: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Cell16: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px`,
}));

const Cell17: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px 0px 0px 96px`,
}));

const Frame292: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `80px`,
  margin: `0px 0px 0px 96px`,
});

const Badge4: any = styled(Badge1)(({ theme }: any) => ({
  margin: `0px`,
}));

const Frame284: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Cell18: any = styled(Cell)(({ theme }: any) => ({
  width: `200px`,
  margin: `0px`,
}));

const Cell19: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px 0px 0px 96px`,
}));

const Frame274: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 100px 0px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Cell20: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px`,
}));

const Cell21: any = styled(Cell)(({ theme }: any) => ({
  width: `80px`,
  margin: `0px 0px 0px 96px`,
}));

const Frame293: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `80px`,
  margin: `0px 0px 0px 96px`,
});

const Badge5: any = styled(Badge1)(({ theme }: any) => ({
  margin: `0px`,
}));

function Row(props: RowProps): JSX.Element {
  return (
    <RowHeader className={props.className}>
      <Frame28>
        <Cell1 />
        <Cell2 />
      </Frame28>
      <Frame27>
        <Cell3 />
        <Cell4 />
        <Cell5 />
      </Frame27>
      {false && (
        <Frame281>
          <Cell6 />
          <Cell7 />
        </Frame281>
      )}
      {false && (
        <Frame271>
          <Cell8 />
          <Cell9 />
          <Frame29>
            <Badge2 />
          </Frame29>
        </Frame271>
      )}
      {false && (
        <Frame282>
          <Cell10 />
          <Cell11 />
        </Frame282>
      )}
      {false && (
        <Frame272>
          <Cell12 />
          <Cell13 />
          <Frame291>
            <Badge3 />
          </Frame291>
        </Frame272>
      )}
      {false && (
        <Frame283>
          <Cell14 />
          <Cell15 />
          <Group>
            <Vector src={VectorImage} loading="lazy" alt={'Vector'} />
            <Vector1 src={Vector1Image} loading="lazy" alt={'Vector'} />
            <Vector2 src={Vector2Image} loading="lazy" alt={'Vector'} />
            <Vector3 src={Vector3Image} loading="lazy" alt={'Vector'} />
            <Vector4 src={Vector4Image} loading="lazy" alt={'Vector'} />
          </Group>
        </Frame283>
      )}
      {false && (
        <Frame31>
          <Frame32>
            <Frame273>
              <Cell16 />
              <Cell17 />
              <Frame292>
                <Badge4 />
              </Frame292>
            </Frame273>
          </Frame32>
        </Frame31>
      )}
      {false && (
        <Frame284>
          <Cell18 />
          <Cell19 />
        </Frame284>
      )}
      {false && (
        <Frame274>
          <Cell20 />
          <Cell21 />
          <Frame293>
            <Badge5 />
          </Frame293>
        </Frame274>
      )}
    </RowHeader>
  );
}

export default Row;
